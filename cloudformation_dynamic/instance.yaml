AWSTemplateFormatVersion: '2010-09-09'
Description: 'Simple REST API application instance only'


Parameters:
  InstanceType:
    Type: String
    Description: EC2 instance type
    Default: t3.micro
    AllowedValues:
      - t3.micro
      - t3.small
      - t3.medium

  LatestAmiId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Description: Latest Amazon Linux 2023 AMI ID
    Default: /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-x86_64

  KeyName:
    Type: String
    Description: EC2 Key Pair name (optional, for SSH access)
    Default: ''

Conditions:
  HasKeyName: !Not [!Equals [!Ref KeyName, '']]


Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !Ref LatestAmiId
      IamInstanceProfile: !ImportValue InstanceProfile
      KeyName: !If [HasKeyName, !Ref KeyName, !Ref 'AWS::NoValue']
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          GroupSet:
            - !ImportValue InstanceSecurityGroup
          SubnetId: !ImportValue PublicSubnet
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          set -e
          
          # Update system
          yum update -y
          # Install Nginx
          sudo yum install -y nginx

          systemctl enable nginx
          systemctl start nginx
          
          # Install Python 3 and pip, upgrade pip, install venv, create venv, enable venv
          echo "Install Python......"
          yum install -y python3 python3-pip
          echo "Install pip and virtualenv......"
          /usr/bin/python3 -m pip install --upgrade pip virtualenv


          # Copy dummy file from S3 bucket to /usr/share/nginx/html
          echo "get resources from S3......"
          mkdir -p /usr/share/nginx/html
          aws s3 cp s3://simplerestapi-bucket-20251016/dummy.html /usr/share/nginx/html/dummy.html
          
          # Copy second dummy file from S3 bucket to /usr/share/nginx/html/secondary
          mkdir -p /usr/share/nginx/html/secondary
          aws s3 cp s3://simplerestapi-bucket-20251016/dummy2.html /usr/share/nginx/html/secondary/dummy2.html

          # Copy custom Nginx configuration from S3 bucket and start nginx
          aws s3 cp s3://simplerestapi-bucket-20251016/webservice.conf /etc/nginx/default.d/webservice.conf
          echo "start nginx......"
          systemctl restart nginx

          # Create application directory
          echo "get more resources from s3......"
          mkdir -p /opt/simplerestapi
          cd /opt/simplerestapi
          
          # Deploy the application to a location
          aws s3 cp s3://simplerestapi-bucket-20251016/app.py /opt/simplerestapi/app.py
          aws s3 cp s3://simplerestapi-bucket-20251016/requirements.txt /opt/simplerestapi/requirements.txt
          echo "create virtualenv and install all requirements......"
          python3 -m venv /opt/simplerestapi/venv
          /opt/simplerestapi/venv/pip install -r requirements.txt

          echo "Start the simplerestapi executable......"
          
          # Create systemd service
          cat > /etc/systemd/system/simplerestapi.service << 'EOF'
          [Unit]
          Description=Simple REST API
          After=network.target
          
          [Service]
          Type=simple
          User=root
          WorkingDirectory=/opt/simplerestapi
          ExecStart=/opt/simplerestapi/venv/bin/python3 /opt/simplerestapi/app.py
          Restart=always
          
          [Install]
          WantedBy=multi-user.target
          EOF
          
          # Enable and start the service
          systemctl daemon-reload
          systemctl enable simplerestapi
          systemctl start simplerestapi
      Tags:
        - Key: Name
          Value: SimpleRestApiInstance
Outputs:
  InstanceId:
    Description: EC2 Instance ID
    Value: !Ref EC2Instance
    Export:
      Name: SimpleRestApiInstanceId

  PublicIP:
    Description: Public IP address of the EC2 instance
    Value: !GetAtt EC2Instance.PublicIp
    Export:
      Name: SimpleRestApiPublicIP

  PublicDNS:
    Description: Public DNS name of the EC2 instance
    Value: !GetAtt EC2Instance.PublicDnsName
    Export:
      Name: SimpleRestApiPublicDNS

  ApiUrl:
    Description: URL to access the REST API
    Value: !Sub 'http://${EC2Instance.PublicIp}:8080'
    Export:
      Name: SimpleRestApiUrl